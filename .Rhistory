species = "Species"
) %>%
fmt_number(
columns = vars(mass),
decimals = 0) %>%
cols_align(
align = "center",
columns = vars(species, mass, height)
) %>%
row_group_order(
groups = c("X-wing",
"Millennium Falcon")
) %>% gtsave("img/sw_table_final.png")
options(htmltools.dir.version = FALSE, width = 70)
knitr::opts_chunk$set(comment = "##")
library(tidyverse)
library(pander)
library(knitr)
`%!in%` <- Negate(`%in%`)
hook_output = knit_hooks$get('output')
knit_hooks$set(output = function(x, options) {
if (!is.null(n <- options$out.lines)) {
x = unlist(stringr::str_split(x, '\n'))
if (length(x) > n) {
# truncate the output
x = c(head(x, n), '....\n')
}
x = paste(x, collapse = '\n') # paste first n lines together
}
hook_output(x, options)
})
opts_chunk$set(out.lines = 20)
ex_dat <- data.frame(num1 = rnorm(200, 1, 2),
fac1 = sample(c(1, 2, 3), 200, TRUE),
num2 = rnorm(200, 0, 3),
fac2 = sample(c(1, 2))) %>%
mutate(yn = num1*0.5 + fac1*1.1 + num2*0.7 + fac2-1.5  + rnorm(200, 0, 2)) %>%
mutate(yb = as.numeric(yn > mean(yn))) %>%
mutate(fac1 = factor(fac1, labels=c("A", "B", "C")),
fac2 = factor(fac2, labels=c("Yes", "No")))
library(broom)
lm_1 <- lm(yn ~ num1 + fac1, data = ex_dat)
summary(lm_1)
glm_1 <- glm(yb ~ num1 + fac1, data = ex_dat, family=binomial(link="logit"))
summary(glm_1)
lm_1 %>% tidy()
glm_1 %>% tidy()
glance(lm_1)
augment(lm_1) %>% head()
ex_dat %>% group_by(fac1) %>% do(tidy(lm(yn ~  num1 + fac2 + num2, data = .))) #<<
library(gapminder)
ggplot(data = gapminder,
aes(x = year, y = lifeExp, color = continent)) +
geom_point(position = position_jitter(1,0), size = 0.5) +
geom_smooth()
ggplot(data = gapminder,
aes(x = year, y = lifeExp, color = continent)) +
geom_point(position = position_jitter(1,0), size = 0.5) +
geom_smooth(method = "glm", formula = y ~ x) #<<
ggplot(data = gapminder,
aes(x = year, y = lifeExp, color = continent)) +
geom_point(position = position_jitter(1,0), size = 0.5) +
geom_smooth(method = "glm", formula = y ~ poly(x, 2)) #<<
library(ggeffects)
ex_dat <- data.frame(num1 = rnorm(200, 1, 2),
fac1 = sample(c(1, 2, 3), 200, TRUE),
num2 = rnorm(200, 0, 3),
fac2 = sample(c(1, 2))) %>%
mutate(yn = num1 * 0.5 + fac1 * 1.1 + num2 * 0.7 +
fac2 - 1.5  + rnorm(200, 0, 2)) %>%
mutate(yb = as.numeric(yn > mean(yn))) %>%
mutate(fac1 = factor(fac1, labels = c("A", "B", "C")),
fac2 = factor(fac2, labels = c("Yes", "No")))
lm_1 <- lm(yn ~ num1 + fac1, data = ex_dat)
lm_1_est <- ggpredict(lm_1, terms = "num1")
lm_1_est
plot(lm_1_est)
glm(yb ~ num1 + fac1 + num2 + fac2, data = ex_dat, family=binomial(link = "logit")) %>%
ggpredict(terms = c("num1", "fac1")) %>% plot()
glm(yb ~ num1 + fac1 + num2 + fac2, data = ex_dat, family = binomial(link = "logit")) %>%
ggpredict(terms = c("num1", "fac1")) %>% plot(facet=TRUE)
glm(yb ~ num1 + fac1 + num2 + fac2, data=ex_dat, family=binomial(link="logit")) %>%
ggpredict(terms = c("num1 [-1,0,1]", "fac1 [A,B]")) %>% plot(facet=TRUE)
glm(yb ~ num1 + fac1 + num2 + fac2, data = ex_dat, family = binomial(link = "logit")) %>%
ggpredict(terms = c("num1 [meansd]", "num2 [minmax]")) %>% plot(facet=TRUE)
lm(yn ~ fac1 + fac2, data = ex_dat) %>%
ggpredict(terms=c("fac1", "fac2")) %>% plot()
library(pander)
panderOptions("table.style", "rmarkdown")
library(sjPlot)
model_1 <- lm(mpg ~ wt, data = mtcars)
tab_model(model_1)
model_2 <- lm(mpg ~ hp + wt, data = mtcars)
model_3 <- lm(mpg ~ hp + wt + factor(am), data = mtcars)
tab_model(model_1, model_2, model_3)
knitr::include_graphics("img/sjPlot_likert.PNG")
knitr::include_graphics("img/sjPlot_crosstab.PNG")
library(gt)
tes_chars <- starwars %>%
unnest(films) %>%
unnest(starships, keep_empty=TRUE) %>%
filter(films == "The Empire Strikes Back") %>%
select(name, species, starships, mass, height) %>%
distinct(name, .keep_all = TRUE) %>%
mutate(starships = ifelse(name == "Obi-Wan Kenobi" | is.na(starships),
"No Ship", starships))
glimpse(tes_chars)
tes_chars %>%
gt() %>%
gtsave("img/sw_table_1.png")
tes_chars %>%
group_by(starships) %>%
gt() %>% gtsave("img/sw_table_2.png")
tes_chars %>%
group_by(starships) %>%
gt(rowname_col = "name") %>%
gtsave("img/sw_table_3.png")
tes_chars %>%
group_by(starships) %>%
gt(rowname_col = "name") %>%
tab_header(
title = "Star Wars Characters",
subtitle = "The Empire Strikes Back"
) %>% gtsave("img/sw_table_4.png")
tes_chars %>%
group_by(starships) %>%
gt(rowname_col = "name") %>%
tab_header(
title = "Star Wars Characters",
subtitle = "The Empire Strikes Back"
) %>%
tab_spanner(
label = "Vitals",
columns = vars(mass, height)
) %>% gtsave("img/sw_table_5.png")
tes_chars %>%
group_by(starships) %>%
gt(rowname_col = "name") %>%
tab_header(
title = "Star Wars Characters",
subtitle = "The Empire Strikes Back"
) %>%
tab_spanner(
label = "Vitals",
columns = vars(mass, height)
) %>%
cols_label(
mass = "Mass (kg)",
height = "Height (cm)",
species = "Species"
) %>% gtsave("img/sw_table_6.png")
tes_chars %>%
group_by(starships) %>%
gt(rowname_col = "name") %>%
tab_header(
title = "Star Wars Characters",
subtitle = "The Empire Strikes Back"
) %>%
tab_spanner(
label = "Vitals",
columns = vars(mass, height)
) %>%
cols_label(
mass = "Mass (kg)",
height = "Height (cm)",
species = "Species"
) %>%
fmt_number(
columns = vars(mass),
decimals = 0
) %>% gtsave("img/sw_table_7.png")
tes_chars %>%
group_by(starships) %>%
gt(rowname_col = "name") %>%
tab_header(
title = "Star Wars Characters",
subtitle = "The Empire Strikes Back"
) %>%
tab_spanner(
label = "Vitals",
columns = vars(mass, height)
) %>%
cols_label(
mass = "Mass (kg)",
height = "Height (cm)",
species = "Species"
) %>%
fmt_number(
columns = vars(mass),
decimals = 0
) %>%
cols_align(
align = "center",
columns = vars(species, mass, height)
) %>% gtsave("img/sw_table_8.png")
tes_chars %>%
group_by(starships) %>%
gt(rowname_col = "name") %>%
tab_header(
title = "Star Wars Characters",
subtitle = "The Empire Strikes Back"
) %>%
tab_spanner(
label = "Vitals",
columns = vars(mass, height)
) %>%
cols_label(
mass = "Mass (kg)",
height = "Height (cm)",
species = "Species"
) %>%
fmt_number(
columns = vars(mass),
decimals = 0
) %>%
cols_align(
align = "center",
columns = vars(species, mass, height)
) %>%
row_group_order(
groups = c("X-wing",
"Millennium Falcon")
) %>% gtsave("img/sw_table_9.png")
tes_chars %>%
gt() %>%
gtsave("img/sw_table_1.png")
tes_chars %>%
group_by(starships) %>%
gt(rowname_col = "name") %>%
tab_header(
title = "Star Wars Characters",
subtitle = "The Empire Strikes Back"
) %>%
tab_spanner(
label = "Vitals",
columns = vars(mass, height)
) %>%
cols_label(
mass = "Mass (kg)",
height = "Height (cm)",
species = "Species"
) %>%
fmt_number(
columns = vars(mass),
decimals = 0
) %>%
cols_align(
align = "center",
columns = vars(species, mass, height)
) %>%
row_group_order(
groups = c("X-wing",
"Millennium Falcon")
) %>% gtsave("img/sw_table_9.png")
library(modelsummary)
model_list <- list("Model 1" = model_1,
"Model 2" = model_2,
"Model 3" = model_3)
msummary(model_list)
msummary(model_list, output = "ex_table.png")
msummary(model_list, output = "gt") %>%
tab_header("Summary Table", "Models of mpg")
options(htmltools.dir.version = FALSE, width = 70)
knitr::opts_chunk$set(comment = "##")
library(gtsummary)
mtcars %>% tbl_summary()
mtcars %>% tbl_summary(by = "am")
?msummary
mtcars %>%
tbl_summary()
min(mtcars$mpg)
mean(mtcars$mpg)
median(mtcars$mpg)
quantile(mtcars$mpg)
mtcars %>%
select(1:9) %>%
tbl_summary()
mtcars %>%
dplyr::select(1:9) %>%
tbl_summary()
library(tidyverse)
mtcars %>%
select(1:9) %>%
tbl_summary(by = "am") %>%
as_gt() %>%
tab_spanner(label = "Transmission", columns = starts_with("stat_"))
library(gt)
mtcars %>%
select(1:9) %>%
tbl_summary(by = "am") %>%
as_gt() %>%
tab_spanner(label = "Transmission", columns = starts_with("stat_"))
mtcars
mtcars %>%
select(1:9) %>%
tbl_summary(by = "am") %>%
as_gt() %>%
tab_spanner(label = "Transmission",
columns = starts_with("stat_")) %>%
tab_header("Motor Trend Cars", subtitle = "Descriptive Statistics")
mtcars %>%
select(1:9) %>%
tbl_summary()
mtcars %>%
select(1:9) %>%
tbl_summary() %>%
gtsave("img/gtsummary1.png")
mtcars %>%
select(1:9) %>%
tbl_summary()
mtcars %>%
select(1:9) %>%
tbl_summary(by = "am") %>%
as_gt() %>%
tab_spanner(label = "Transmission",
columns = starts_with("stat_")) %>%
tab_header("Motor Trend Cars",
subtitle = "Descriptive Statistics") %>%
gtsave("img/gtsummary.png")
library(stringr)
library(readr)
library(dplyr)
library(lubridate)
(year_one <- list.files("open_data_year_one"))
(year_one <- year_one[-c(2, 5)])
library(stringr)
library(readr)
library(dplyr)
library(lubridate)
(year_one <- list.files("open_data_year_one"))
(year_one <- year_one[-c(2, 5)])
files_in_year_one <-list.files("./open_data_year_one")[-c(2,5)]
data_list <- vector("list", length(files_in_year_one))
library(stringr)
data_list_names <- str_sub(files_in_year_one, 6,-5)
names(data_list) <- data_list_names
library(readr)
for(i in seq_along(files_in_year_one)){
data_list[[i]] <- read_csv(paste0("open_data_year_one/", files_in_year_one[i]))
}
str(data_list[["trip_data"]])
names(data_list)
library(dplyr)
data_list[["trip_data"]] %>% count(gender, usertype)
data_list[["trip_data"]] <- data_list[["trip_data"]] %>%
mutate(gender
= ifelse(usertype=="Short-Term Pass Holder", "Unknown",gender))
library(lubridate)
names(data_list)
data_list[["trip_data"]] <- data_list[["trip_data"]] %>%
mutate_at(vars(starttime, stoptime), ~mdy_hm(.))
data_list[["weather_data"]] <-data_list[["weather_data"]] %>%
mutate(Date = mdy(Date))
data_list[["trip_data"]] <- data_list[["trip_data"]] %>%
mutate_at(vars(usertype, gender), as.factor)
str(data_list[["trip_data"]])
ex_string <- c("CBD-11", "ID-01", "UW-02")
str_replace(ex_string, "-.*$", "")
str_extract(ex_string, "[^-]+")
str_extract(ex_string,"[A-Z]*")
region_extract <- function(x){
str_replace(x, "-.*$", "")
}
region_extract(x = c("CBD-11", "ID-01"))
data_list[["station_data"]] <- data_list[["station_data"]] %>% mutate(terminal_region = region_extract(terminal))
data_list[["trip_data"]] <- data_list[["trip_data"]] %>%
mutate(to_station_region = region_extract(to_station_id),
from_station_region = region_extract(from_station_id))
data_list[["weather_data"]] %>% distinct(Events)
data_list[["weather_data"]]<-data_list[["weather_data"]] %>%
mutate(Rain = ifelse(str_detect(Events, "Rain"), "Rain", "No rain")) %>% tidyr::replace_na(list(Rain = "No rain"))
trips_weather <- data_list[["trip_data"]] %>%
mutate(Date = date(starttime)) %>%
left_join(data_list[["weather_data"]], by = "Date")
daily_rain_rides <- function(region_code, direction){
if(direction=="to"){
temp_df <- trips_weather %>% filter(to_station_region == region_code)
} else if(direction == "from"){
temp_df <- trips_weather %>% filter(from_station_region == region_code)
}
temp_df <- temp_df %>% count(Date, Rain)
ggplot(temp_df, aes(x = Date, y = n, color = Rain))+
geom_point() +
scale_color_manual(
name = "Rain",
values = c("Rain" = "black",
"No rain" = "deepskyblue"))
+ggtitle(paste("Daily rides going", direction, region_code)) +
theme_minimal() + geom_smooth()
}
daily_rain_rides("ID","from")
daily_rain_rides <- function(region_code, direction){
if(direction=="to"){
temp_df <- trips_weather %>% filter(to_station_region == region_code)
} else if(direction == "from"){
temp_df <- trips_weather %>% filter(from_station_region == region_code)
}
temp_df <- temp_df %>% count(Date, Rain)
ggplot(temp_df, aes(x = Date, y = n, color = Rain))+
geom_point() +
scale_color_manual(
name = "Rain",
values = c("Rain" = "black",
"No rain" = "deepskyblue"))+
ggtitle(paste("Daily rides going", direction, region_code)) +
theme_minimal() + geom_smooth()
}
daily_rain_rides("ID","from")
daily_rain_rides("UW","to")
daily_rain_rides("CBD","from")
files_in_year_one <- list.files("./open_data_year_one")[-c(4)]
files_in_year_one
data_list <-vector("list", length(files_in_year_one))
library(stringr)
data_list_names <- str_sub(files_in_year_one, 6, -5)
names(data_list) <- data_list_names
library(readr)
for(i in seq_along(files_in_year_one)){
data_list[[i]] <-read_csv(paste0("open_data_year_one/", files_in_year_one[i]))
}
read_our_files <- function(x){
read_csv(paste0("open_data_year_one/", files_in_year_one[x]))
}
data_list_2 <-lapply(seq_along(files_in_year_one), read_our_files)
list.files("./open_data_year_one")[-c(2,5)]
files_in_year_one <- list.files("./open_data_year_one")[-c(2,5)]
files_in_year_one
data_list <-vector("list", length(files_in_year_one))
library(stringr)
data_list_names <- str_sub(files_in_year_one, 6, -5)
names(data_list) <- data_list_names
library(readr)
for(i in seq_along(files_in_year_one)){
data_list[[i]] <-read_csv(paste0("open_data_year_one/", files_in_year_one[i]))
}
read_our_files <- function(x){
read_csv(paste0("open_data_year_one/", files_in_year_one[x]))
}
data_list_2 <-lapply(seq_along(files_in_year_one), read_our_files)
str(data_list)
library(dplyr)
data_list[["trip_data"]] <- data_list[["trip_data"]] %>%
mutate(gender=
ifelse(usertype =="Short-Term Pass Holder", "Unknown", gender))
library(lubridate)
data_list[["trip_data"]] <- data_list[["trip_data"]] %>%
mutate_at(vars(starttime, stoptime), mdy_hm)
data_list[["weather_data"]] <- data_list[["weather_data"]] %>%
mutate(Date = mdy(Date))
data_list[["trip_data"]] <- data_list[["trip_data"]] %>%
mutate_at(vars(usertype, gender), as.factor)
str(data_list[["trip_data"]])
region_extract <- function(x){
str_replace(x, "-.*$","")
}
region_extract(x = c("CBD-11", "ID-01"))
data_list[["station_data"]] <- data_list[["station_data"]] %>%
mutate(terminal_region = region_extract(terminal))
data_list[["trip_data"]] <- data_list[["trip_data"]] %>%
mutate(to_station_region = region_extract(to_station_id),
from_station_region = region_extract(from_station_id))
data_list[["weather_data"]] %>% distinct(Events)
data_list[["weather_data"]] %>%
mutate(Rain = ifelse(str_detect(Events, "Rain"), "Rain", "No rain")) %>%
tidyr::replace_na(list(Rain = "No rain"))
trips_weather <- data_list[["trip_data"]] %>%
mutate(Date = date(starttime)) %>%
left_join(data_list[["weather_data"]], by = "Date")
trips_weather
daily_rain_rides <- function(region_code, direction){
if(direction == "to"){
temp_df <- trips_weather %>%
filter(to_station_region == region_code)
} else if(direction == "from"){
temp_df <- trips_weather %>% filter(from_station_region == region_code)
}
temp_df <- temp_df %>% count(Date, Rain)
ggplot(temp_df, aes(x = Date, y = n, color = Rain)) +
geom_point() + scale_color_manual(
name = "Rain",
values = c("Rain" = "black",
"No rain" = "deepskyblue")) +
ggtitle(paste("Daily rides going", direction, region_code))+
theme_minimal()
}
daily_rain_rides("PS", "from")
trips_weather
data_list[["weather_data"]]  <- data_list[["weather_data"]] %>%
mutate(Rain = ifelse(str_detect(Events, "Rain"), "Rain", "No rain")) %>%
tidyr::replace_na(list(Rain = "No rain"))
trips_weather <- data_list[["trip_data"]] %>%
mutate(Date = date(starttime)) %>%
left_join(data_list[["weather_data"]], by = "Date")
trips_weather
daily_rain_rides <- function(region_code, direction){
if(direction == "to"){
temp_df <- trips_weather %>%
filter(to_station_region == region_code)
} else if(direction == "from"){
temp_df <- trips_weather %>% filter(from_station_region == region_code)
}
temp_df <- temp_df %>% count(Date, Rain)
ggplot(temp_df, aes(x = Date, y = n, color = Rain)) +
geom_point() + scale_color_manual(
name = "Rain",
values = c("Rain" = "black",
"No rain" = "deepskyblue")) +
ggtitle(paste("Daily rides going", direction, region_code))+
theme_minimal()
}
daily_rain_rides("PS", "from")
daily_rain_rides("PS", "from")
